/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestRouteImport } from './routes/test'
import { Route as ProductsRouteRouteImport } from './routes/products/route'
import { Route as AccountRouteRouteImport } from './routes/account/route'
import { Route as ProductsIndexRouteImport } from './routes/products/index'
import { Route as AccountIndexRouteImport } from './routes/account/index'
import { Route as ProductsProductIdRouteImport } from './routes/products/$productId'
import { Route as AccountWishlistRouteImport } from './routes/account/wishlist'
import { Route as AccountReviewsRouteImport } from './routes/account/reviews'
import { Route as AccountOrdersRouteImport } from './routes/account/orders'
import { Route as AccountCartRouteImport } from './routes/account/cart'

const SignupLazyRouteImport = createFileRoute('/signup')()
const LoginLazyRouteImport = createFileRoute('/login')()
const ContactLazyRouteImport = createFileRoute('/contact')()
const AboutLazyRouteImport = createFileRoute('/about')()
const IndexLazyRouteImport = createFileRoute('/')()

const SignupLazyRoute = SignupLazyRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))
const LoginLazyRoute = LoginLazyRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))
const ContactLazyRoute = ContactLazyRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))
const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsRouteRoute = ProductsRouteRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRouteRoute = AccountRouteRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProductsRouteRoute,
} as any)
const AccountIndexRoute = AccountIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountRouteRoute,
} as any)
const ProductsProductIdRoute = ProductsProductIdRouteImport.update({
  id: '/$productId',
  path: '/$productId',
  getParentRoute: () => ProductsRouteRoute,
} as any)
const AccountWishlistRoute = AccountWishlistRouteImport.update({
  id: '/wishlist',
  path: '/wishlist',
  getParentRoute: () => AccountRouteRoute,
} as any)
const AccountReviewsRoute = AccountReviewsRouteImport.update({
  id: '/reviews',
  path: '/reviews',
  getParentRoute: () => AccountRouteRoute,
} as any)
const AccountOrdersRoute = AccountOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AccountRouteRoute,
} as any)
const AccountCartRoute = AccountCartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => AccountRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/account': typeof AccountRouteRouteWithChildren
  '/products': typeof ProductsRouteRouteWithChildren
  '/test': typeof TestRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/account/cart': typeof AccountCartRoute
  '/account/orders': typeof AccountOrdersRoute
  '/account/reviews': typeof AccountReviewsRoute
  '/account/wishlist': typeof AccountWishlistRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/account/': typeof AccountIndexRoute
  '/products/': typeof ProductsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/test': typeof TestRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/account/cart': typeof AccountCartRoute
  '/account/orders': typeof AccountOrdersRoute
  '/account/reviews': typeof AccountReviewsRoute
  '/account/wishlist': typeof AccountWishlistRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/account': typeof AccountIndexRoute
  '/products': typeof ProductsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/account': typeof AccountRouteRouteWithChildren
  '/products': typeof ProductsRouteRouteWithChildren
  '/test': typeof TestRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/account/cart': typeof AccountCartRoute
  '/account/orders': typeof AccountOrdersRoute
  '/account/reviews': typeof AccountReviewsRoute
  '/account/wishlist': typeof AccountWishlistRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/account/': typeof AccountIndexRoute
  '/products/': typeof ProductsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/products'
    | '/test'
    | '/about'
    | '/contact'
    | '/login'
    | '/signup'
    | '/account/cart'
    | '/account/orders'
    | '/account/reviews'
    | '/account/wishlist'
    | '/products/$productId'
    | '/account/'
    | '/products/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/test'
    | '/about'
    | '/contact'
    | '/login'
    | '/signup'
    | '/account/cart'
    | '/account/orders'
    | '/account/reviews'
    | '/account/wishlist'
    | '/products/$productId'
    | '/account'
    | '/products'
  id:
    | '__root__'
    | '/'
    | '/account'
    | '/products'
    | '/test'
    | '/about'
    | '/contact'
    | '/login'
    | '/signup'
    | '/account/cart'
    | '/account/orders'
    | '/account/reviews'
    | '/account/wishlist'
    | '/products/$productId'
    | '/account/'
    | '/products/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AccountRouteRoute: typeof AccountRouteRouteWithChildren
  ProductsRouteRoute: typeof ProductsRouteRouteWithChildren
  TestRoute: typeof TestRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ContactLazyRoute: typeof ContactLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  SignupLazyRoute: typeof SignupLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/'
      fullPath: '/products/'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof ProductsRouteRoute
    }
    '/account/': {
      id: '/account/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof AccountIndexRouteImport
      parentRoute: typeof AccountRouteRoute
    }
    '/products/$productId': {
      id: '/products/$productId'
      path: '/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdRouteImport
      parentRoute: typeof ProductsRouteRoute
    }
    '/account/wishlist': {
      id: '/account/wishlist'
      path: '/wishlist'
      fullPath: '/account/wishlist'
      preLoaderRoute: typeof AccountWishlistRouteImport
      parentRoute: typeof AccountRouteRoute
    }
    '/account/reviews': {
      id: '/account/reviews'
      path: '/reviews'
      fullPath: '/account/reviews'
      preLoaderRoute: typeof AccountReviewsRouteImport
      parentRoute: typeof AccountRouteRoute
    }
    '/account/orders': {
      id: '/account/orders'
      path: '/orders'
      fullPath: '/account/orders'
      preLoaderRoute: typeof AccountOrdersRouteImport
      parentRoute: typeof AccountRouteRoute
    }
    '/account/cart': {
      id: '/account/cart'
      path: '/cart'
      fullPath: '/account/cart'
      preLoaderRoute: typeof AccountCartRouteImport
      parentRoute: typeof AccountRouteRoute
    }
  }
}

interface AccountRouteRouteChildren {
  AccountCartRoute: typeof AccountCartRoute
  AccountOrdersRoute: typeof AccountOrdersRoute
  AccountReviewsRoute: typeof AccountReviewsRoute
  AccountWishlistRoute: typeof AccountWishlistRoute
  AccountIndexRoute: typeof AccountIndexRoute
}

const AccountRouteRouteChildren: AccountRouteRouteChildren = {
  AccountCartRoute: AccountCartRoute,
  AccountOrdersRoute: AccountOrdersRoute,
  AccountReviewsRoute: AccountReviewsRoute,
  AccountWishlistRoute: AccountWishlistRoute,
  AccountIndexRoute: AccountIndexRoute,
}

const AccountRouteRouteWithChildren = AccountRouteRoute._addFileChildren(
  AccountRouteRouteChildren,
)

interface ProductsRouteRouteChildren {
  ProductsProductIdRoute: typeof ProductsProductIdRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
}

const ProductsRouteRouteChildren: ProductsRouteRouteChildren = {
  ProductsProductIdRoute: ProductsProductIdRoute,
  ProductsIndexRoute: ProductsIndexRoute,
}

const ProductsRouteRouteWithChildren = ProductsRouteRoute._addFileChildren(
  ProductsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AccountRouteRoute: AccountRouteRouteWithChildren,
  ProductsRouteRoute: ProductsRouteRouteWithChildren,
  TestRoute: TestRoute,
  AboutLazyRoute: AboutLazyRoute,
  ContactLazyRoute: ContactLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  SignupLazyRoute: SignupLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
